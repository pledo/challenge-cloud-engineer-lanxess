name: test
on:
  push:
    branches: ['feat/argocd-giops']
permissions:
  contents: write
env:
  DOCKERHUB_REGISTRY: pledo
  IMAGE_NAME: springboot-sample
  ENVIRONMENT: test
  ARGOCD_APPS_BRANCH: feat/argocd-giops

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      sha-short: ${{ steps.output.outputs.sha_short}}
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set outputs
        id: output
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.output.outputs.sha_short }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Check tags
        run: echo ${{ steps.meta.outputs.tags }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: spring-postgres/backend/
          file: spring-postgres/backend/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.output.outputs.sha_short }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Update changes in GitHub repository
        run:  |
          echo -e "\n#### SHA: ${{ steps.output.outputs.sha_short }}"
          cd cicd/argocd/overlays/${{ env.ENVIRONMENT }}
          kustomize edit set image ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.output.outputs.sha_short }}
          cat kustomization.yaml
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add kustomization.yaml
          git commit -m "bump ${{ env.ENVIRONMENT }} env image: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.output.outputs.sha_short }}"
          git push


  #deploy:
  #  name: Deploy
  #  runs-on: ubuntu-latest
  #  needs: build
  #  steps:     
  #    - name: Listing files
  #      run: |
  #        echo -e "\n#### SHA: ${{ needs.build.outputs.sha-short }}"
  #        cd cicd/argocd/overlays/${{ env.ENVIRONMENT }}
  #        kustomize edit set image ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{needs.build.outputs.sha-short}}
  #        cat kustomization.yaml
  #        git config --local user.email "github-actions@github.com"
  #        git config --local user.name "GitHub Actions"
  #        git add kustomization.yaml
  #        git commit -m "bump ${{ env.ENVIRONMENT }} env image: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{needs.build.outputs.sha-short}}"
  #    #- name: Push changes
  #    #  uses: ad-m/github-push-action@master
  #    #  with:
  #    #    ssh: true
  #    #    branch: ${{ env.ARGOCD_APPS_BRANCH }}
  #    #    directory: gitops
  #    #    repository: compay/comments